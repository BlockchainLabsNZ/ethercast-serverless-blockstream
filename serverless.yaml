service:
  name: serverless-blockstream

# Add the serverless-webpack plugin
plugins:
  - serverless-dynamodb-autoscaling
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs6.10
  environment: # service wide environment variables
    BLOCKSTREAM_STATE_TABLE: ${self:service}-${opt:stage, self:provider.stage}-bs-state-v3
    BLOCKS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-blocks-v3
    LOGS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-logs-v3
    SRC_NODE_URL: "https://mainnet.infura.io/0eep3H3CSiqitPXv0aOy"
    DESTINATION_QUEUE_NAME: ""
    RUN_TIME_LENGTH_SECONDS: "120"
  iamRoleStatements: # permissions for all of your functions can be set here
    - Effect: Allow
      Action: # Gives permission to DynamoDB tables in a specific region
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:BatchWriteItem
      Resource:
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BLOCKSTREAM_STATE_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BLOCKSTREAM_STATE_TABLE}/*"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BLOCKS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BLOCKS_TABLE}/*"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.LOGS_TABLE}"
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.LOGS_TABLE}/*"
    - Effect: Allow
      Action: # Gives permission to push logs to the SQS queue
        - sqs:SendMessageBatch
      Resource:
        - "arn:aws:sqs:*:*:${self:provider.environment.DESTINATION_QUEUE_NAME}"

functions:
  poll-for-blocks:
    handler: src/poll.start
    memorySize: 256 # optional, in MB, default is 1024
    timeout: 180
    events:
      - schedule:
          rate: rate(2 minutes)
          enabled: false

  handle-new-blocks:
    handler: src/handle.start
    memorySize: 128 # optional, in MB, default is 1024
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - BlocksTable
              - StreamArn

resources:
  Resources:
    BlockStreamStateTable:
        Type: AWS::DynamoDB::Table
        Properties:
          TableName: ${self:provider.environment.BLOCKSTREAM_STATE_TABLE}
          AttributeDefinitions:
            - AttributeName: network_id
              AttributeType: N
          KeySchema:
            - AttributeName: network_id
              KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    BlocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.BLOCKS_TABLE}
        AttributeDefinitions:
          - AttributeName: hash
            AttributeType: S
          - AttributeName: number
            AttributeType: S
        KeySchema:
          - AttributeName: hash
            KeyType: HASH
          - AttributeName: number
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: KEYS_ONLY
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        GlobalSecondaryIndexes:
          -
            IndexName: ByBlockNumber
            KeySchema:
              - AttributeName: number
                KeyType: HASH
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1


    LogsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.LOGS_TABLE}
        AttributeDefinitions:
          - AttributeName: transactionHash
            AttributeType: S
          - AttributeName: logIndex
            AttributeType: S
          - AttributeName: blockHash
            AttributeType: S
        KeySchema:
          - AttributeName: transactionHash
            KeyType: HASH
          - AttributeName: logIndex
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        GlobalSecondaryIndexes:
          -
            IndexName: ByBlockHash
            KeySchema:
              - AttributeName: blockHash
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1

custom:
  webpackIncludeModules: true # enable auto-packing of external modules
  capacities:
    - table: BlocksTable  # DynamoDB Resource
      read:
        minimum: 1        # Minimum read capacity
        maximum: 25      # Maximum read capacity
        usage: 0.8       # Targeted usage percentage
      write:
        minimum: 1        # Minimum write capacity
        maximum: 25      # Maximum write capacity
        usage: 0.8       # Targeted usage percentage
    - table: LogsTable    # DynamoDB Resource
      read:
        minimum: 1        # Minimum read capacity
        maximum: 25      # Maximum read capacity
        usage: 0.8       # Targeted usage percentage
      write:
        minimum: 1        # Minimum write capacity
        maximum: 25      # Maximum write capacity
        usage: 0.8       # Targeted usage percentage
